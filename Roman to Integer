class Solution {
public:
    int romanToInt(string s) {
        vector<char> symbols = {'I', 'V', 'X', 'L', 'C', 'D', 'M'};
        vector<int> values = {1, 5, 10, 50, 100, 500, 1000};

        int sum = 0;
        int n = s.length();

        for (int i = 0; i < n; i++) {
            int index = find(symbols.begin(), symbols.end(), s[i]) - symbols.begin();
            int currValue = values[index];

            if (i < n - 1) {
                int nextIndex = find(symbols.begin(), symbols.end(), s[i + 1]) - symbols.begin();
                int nextValue = values[nextIndex];

                if (currValue < nextValue) {
                    sum -= currValue;
                    continue;
                }
            }

            // Otherwise, add it
            sum += currValue;
        }

        return sum;
    }
};
